colnames(df)
df4 <- df[,c(8,14,13,11)]
fit4 <- lm(total_action ~ total_new_friends + total_time_spend + total_visits, data=df4)
summary(fit4)
cv.lm(df = df4, form.lm = formula(total_action ~ total_time_spend + total_new_friends + total_visits))
View(df1)
df1$total_action <- NULL
kc1 <- kmeans(df1,3)
table(df$total_action, kc1$cluster)
data(iris)
newiris <- iris
newiris$Species <- NULL
View(newiris)
kc <- kmeans(newiris, 3)
table(iris$Species, kc$cluster)
plot(newiris[c("Sepal.Length", "Sepal.Width")], col=kc$cluster)
View(df1)
plot(df1[c("total_visits")], col=kc1$cluster)
plot(df[c("total_action","total_visits")], col=kc1$cluster)
points(kc1$centers[,c("total_action", "total_visits")], col=1:3, pch=8, cex=2)
head(df2)
df1 <- df[,c(8,11)] #total_action ~ total_visits
df4$total_action <- NULL
cv.lm(df = df4, form.lm = formula(total_action ~ total_time_spend + total_new_friends + total_visits))
cv.lm(df = df4, form.lm = formula(total_action ~ total_time_spend + total_new_friends + total_visits))
df4 <- df[,c(8,14,13,11)]
cv.lm(df = df4, form.lm = formula(total_action ~ total_time_spend + total_new_friends + total_visits))
colnames(df4)
df4kc <- df4[,-c(-1)]
as.data.frame(df4kc) <- df4[,-c(-1)]
dfkc4 <- df4
df4kc <- df4
rm(dfkc4)
df4kc$total_action <- NULL
kc4 <- kmeans(df4kc,3)
table(df4kc$total_action, kc4$cluster)
table(dfc$total_action, kc4$cluster)
table(df$total_action, kc4$cluster)
colnames(df)
df5 <- df$total_time_spend * df$total_new_friends * total_visits
dftest <- df4
View(dftest)
dftest$combine <- df$total_time_spend * df$total_new_friends * total_visits
dftest$combine <- df$total_time_spend * df$total_new_friends * df$total_visits
df5 <- df$total_time_spend * df$total_new_friends * df$total_visits
rm(dftest)
dftest <- df4
dftest$combined <- df$total_time_spend * df$total_new_friends * df$total_visits
View(dftest)
dftest$combined <- (df$total_time_spend * df$total_new_friends * df$total_visits)/3
View(dftest)
cv.lm(df = dftest, form.lm = formula(total_action ~ combined))
fit5 <- lm(total_action ~ combined, data=dftest)
summary(fit5)
dftest$combined <- (df$total_new_friends * df$total_visits)/2
View(dftest)
dftest$combined <- (df$total_time_spend * df$total_visits)/2
View(dftest)
cv.lm(df = dftest, form.lm = formula(total_action ~ combined + total_new_friends))
fit5 <- lm(total_action ~ combined + total_new_friends, data=dftest)
summary(fit5)
colnames(df)
df5 <- df[,c(8,14,13,11)]
df5$combined <- (df$total_time_spend * df$total_visits)/2
cv.lm(df = df5, form.lm = formula(total_action ~ combined + total_new_friends))
fit5 <- lm(total_action ~ combined + total_new_friends, data=df5)
summary(fit5)
dfkc <- df5
dfkc$total_action <- NULL
kc1 <- kmeans(dfkc,3)
table(df$total_action, kc1$cluster)
View(df5)
plot(dfkc[c("total_new_friends","combined")], col=kc1$cluster)
head(kc1)
View(dfkc)
colnames(dfkc)
dfkc$total_time_spend
dfkc$total_time_spend <- NULL
colnames(dfkc)
dfkc$total_visits <- NULL
colnames(dfkc)
kc1 <- kmeans(dfkc,3)
table(df$total_action, kc1$cluster)
plot(dfkc[c("total_new_friends","combined")], col=kc1$cluster)
head(kc1)
points(kc$centers[,c("total_new_friends", "combined")], col=1:3, pch=8, cex=2)
points(kc$centers[,c("total_new_friends", "combined")],)
points(dfkc$centers[,c("total_new_friends", "combined")], col=1:3, pch=8, cex=2)
table(iris$Species, kc$cluster)
head(kc)
points(dfkc$centers[,c("total_new_friends", "combined")], col=1:2, pch=8, cex=2)
plot(newiris[c("Sepal.Length", "Sepal.Width")], col=kc$cluster)
points(kc$centers[,c("Sepal.Length", "Sepal.Width")], col=1:3, pch=8, cex=2)
points(kc$centers[,c("Sepal.Length", "Sepal.Width")], col=1:3)
2
points(kc$centers[,c("Sepal.Length", "Sepal.Width")], col=1:3, pch=8, cex=2)
points(kc$centers[,c("Sepal.Length", "Sepal.Width")],)
plot(dfkc[c("total_new_friends","combined")], col=kc1$cluster)
head(kc1)
points(dfkc$centers[,c("total_new_friends", "combined")],)
summary(kc1)
kc1
kc1 <- kmeans(dfkc,2)
kc1
kc1 <- kmeans(dfkc,3)
kc1 <- kmeans(dfkc,2)
kc2 <- kmeans(dfkc,3)
kc2
kc3 <- kmeans(dfkc,4)
kc3
kc5 <- kmeans(dfkc,5)
kc5
kc3
require(useful)
wine<- read.table("http://www.jaredlander.com/data/wine.csv", header=TRUE, sep=",",stringsAsFactors=FALSE)
corner(wine)
set.seed(278613)
wineK3 <- kmeans(x=wine,centers=3)
wineK3$cluster
wineK3$centers
View(wineK3$centers)
wineK3$size
wineK3$size
kc1$size
wineBest <- FitKMeans(x=wine,max.clusters=20,seed=278613)
wineBest
kcbest1 <- FitKMeans(dfkc, max.clusters=20)
kcbest1
require(cluster)
theGap <- clusGap(wine,K.max=20, FUNcluster=pam)
plot(theGap)
x <- c(1,4,5)
mean(x)
median(x)
pam #partition around medoids
winePam <- pam(x=wine, k=5) #k-medoids is resistant to outliers
plot(winePam)
require(parallel)
require(doParallel)
kcbest1 <- FitKMeans(dfkc, max.clusters=20)
kcbest1
kc1 <- kmeans(dfkc,2)
kc1
kc2
kc3
kc2 <- kmeans(dfkc,2)
kc2
kc3 <- kmeans(dfkc,3)
kc3
kc4 <- kmeans(dfkc,4)
kc4
kc5 <- kmeans(dfkc,5)
kc5
kc2
kc3
kc4
kc5
sse <- c(57.4,75,84.8,89.3)
sse
sse <- as.data.frame(sse)
View(sse)
84/75
84/89
89.3/84.8
84.8/75.6
kcbest <- FitKMeans(dfkc,max.clusters=10)
kcbest
kcbest <- FitKMeans(dfkc,max.clusters=15)
kcbest
kcbest <- FitKMeans(dfkc,max.clusters=16)
kcbest
kcbest <- FitKMeans(dfkc,max.clusters=20)
kcbest
kcbest <- FitKMeans(dfkc,max.clusters=20)
kcbest
kcbest <- FitKMeans(dfkc,max.clusters=10)
kcbest
kcbest <- FitKMeans(dfkc,max.clusters=15)
kcbest
kcbest <- FitKMeans(dfkc,max.clusters=20)
kcbest
kcbest <- FitKMeans(dfkc,max.clusters=20)
kcbest
kc5
plot(dfkc[c("total_new_friends","combined")], col=kc1$cluster)
plot(dfkc[c("total_new_friends","combined")], col=kc2$cluster)
plot(dfkc[c("total_new_friends","combined")], col=kc3$cluster)
plot(dfkc[c("total_new_friends","combined")], col=kc4$$cluster)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
plot(dfkc[c("total_new_friends","combined")], col=kc5$cluster)
plot(dfkc[c("total_new_friends","combined")], col=kc2$cluster)
kc2
plot(dfkc[c("total_new_friends","combined")], col=kc3$cluster)
kc3
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
kc4
plot(dfkc[c("total_new_friends","combined")], col=kc5$cluster)
kc5
head(kc5)
points(kc5$centers[,c("total_new_friends", "combined")],)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:2, pch=8, cex=2)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:2, pch=6, cex=2)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:2, pch=1, cex=2)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:2, pch=8, cex=2)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:2, pch=8, cex=1)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:2, pch=8, cex=6)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:2, pch=2, cex=6)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:2, pch=2, cex=3)
setwd("/Users/michaelpiccirilli/Desktop/Fall_2013/W4242/Assignment_2")
mon <- read.csv(file="Monday.csv",header=TRUE, sep=",")
tue <- read.csv(file="Tuesday.csv",header=TRUE, sep=",")
wed <- read.csv(file="Wednesday.csv",header=TRUE, sep=",")
thur <- read.csv(file="Thursday.csv",header=TRUE, sep=",")
fri <- read.csv(file="Friday.csv",header=TRUE, sep=",")
sat <- read.csv(file="Saturday.csv",header=TRUE, sep=",")
sun <- read.csv(file="Sunday.csv",header=TRUE, sep=",")
fullweek <- rbind(mon,tue,wed,thur,fri,sat,sun)
#since there are 50 users missing in the "fullweek" of data, I am creating a
#data frame numbered from 1 - 10,000, and will combine the full week with
#this dataset, then reduce based on the "X" column, which is also the "userid"
dummydf <- data.frame(X=1:10000, number_visit=0,number_posts=0,time_spend=0,new_friend=0,userid=0)
#load in the the linkage file to extract the total number of friends for each user
linkage <- read.csv(file="Linkage.csv",header=TRUE, sep=",")
#add the totalfriend column to the dummydf
#sum the rows of the Linkage file, minus the X row-value, which is included in the sum
dummydf$totalfriends <- rowSums(linkage)-dummydf$X
#add the totalfriends column to the fullweek dataset
fullweek$totalfriends <- 0
#rbind the fullweek dataset and dummydf dataset
dummyandfullweek <- rbind(fullweek,dummydf)
#now combine dummydf with the fullweek data so as to include the 50 missing users
#who apparently didn't log in that week
require(plyr)
completeDF <- ddply(dummyandfullweek,"X",numcolwise(sum))
#reset the userid to equal the "X" column
completeDF$userid <- completeDF$X
#rename the columns with the total(summed) data
colnames(completeDF) <- c("X","total_visits","total_posts","total_time_spend","total_new_friends","userid","totalfriends")
#read in the user profile data
userprofile <- read.csv(file="profile.csv",header=TRUE, sep=",")
#Merge the completeDF with the userprofile based on the X and/or userid
Q2a <- merge(userprofile,completeDF, by = "userid", all=TRUE)
#deleting unecessary columns in final dataset
Q2a$X.x <- NULL
Q2a$X.y <- NULL
setwd("/Users/michaelpiccirilli/Desktop/Fall_2013/W4242/Assignment_2")
mon <- read.csv(file="Monday.csv",header=TRUE, sep=",")
setwd("/Users/michaelpiccirilli/Desktop/Fall_2013/W4242/Assignment_2/social_network_dataset")
mon <- read.csv(file="Monday.csv",header=TRUE, sep=",")
tue <- read.csv(file="Tuesday.csv",header=TRUE, sep=",")
wed <- read.csv(file="Wednesday.csv",header=TRUE, sep=",")
thur <- read.csv(file="Thursday.csv",header=TRUE, sep=",")
fri <- read.csv(file="Friday.csv",header=TRUE, sep=",")
sat <- read.csv(file="Saturday.csv",header=TRUE, sep=",")
sun <- read.csv(file="Sunday.csv",header=TRUE, sep=",")
fullweek <- rbind(mon,tue,wed,thur,fri,sat,sun)
#since there are 50 users missing in the "fullweek" of data, I am creating a
#data frame numbered from 1 - 10,000, and will combine the full week with
#this dataset, then reduce based on the "X" column, which is also the "userid"
dummydf <- data.frame(X=1:10000, number_visit=0,number_posts=0,time_spend=0,new_friend=0,userid=0)
#load in the the linkage file to extract the total number of friends for each user
linkage <- read.csv(file="Linkage.csv",header=TRUE, sep=",")
#add the totalfriend column to the dummydf
#sum the rows of the Linkage file, minus the X row-value, which is included in the sum
dummydf$totalfriends <- rowSums(linkage)-dummydf$X
#add the totalfriends column to the fullweek dataset
fullweek$totalfriends <- 0
#rbind the fullweek dataset and dummydf dataset
dummyandfullweek <- rbind(fullweek,dummydf)
#now combine dummydf with the fullweek data so as to include the 50 missing users
#who apparently didn't log in that week
require(plyr)
completeDF <- ddply(dummyandfullweek,"X",numcolwise(sum))
#reset the userid to equal the "X" column
completeDF$userid <- completeDF$X
#rename the columns with the total(summed) data
colnames(completeDF) <- c("X","total_visits","total_posts","total_time_spend","total_new_friends","userid","totalfriends")
#read in the user profile data
userprofile <- read.csv(file="profile.csv",header=TRUE, sep=",")
#Merge the completeDF with the userprofile based on the X and/or userid
Q2a <- merge(userprofile,completeDF, by = "userid", all=TRUE)
#deleting unecessary columns in final dataset
Q2a$X.x <- NULL
Q2a$X.y <- NULL
View(`Q2a`)
setwd("/Users/michaelpiccirilli/Desktop/Fall_2013/W4242/Assignment_2")
q2a <- read.csv(file="Assignment2_2a.csv",header=TRUE,sep=",")
q2a$sign_up <- as.Date(q2a$sign_up)
#Transform some of the numerical data into character
q2a$gender <- gsub("1","Male",q2a$gender)
q2a$gender <- gsub("0","Female",q2a$gender)
q2a$relation_status <- gsub("1","single",q2a$relation_status)
q2a$relation_status <- gsub("2","in a relationship",q2a$relation_status)
q2a$relation_status <- gsub("3","engaged",q2a$relation_status)
q2a$relation_status <- gsub("4","married",q2a$relation_status)
#What is the distibution of the number of friends?
ggplot(q2a, aes(x=totalfriends, fill=relation_status)) + geom_density(alpha=.3)
#Answer:
#A majority of the users have under 100 friends
#What's the relation between the number of friends and age?
ggplot(q2a, aes(x=age,y=totalfriends)) + geom_hex(bins=50)
qplot(age, totalfriends, data = q2a) + stat_smooth(method="lm", se=FALSE)
coef(lm(totalfriends ~ age, data = q2a))
ggplot(q2a, aes(x=age,y=totalfriends)) + geom_hex(bins=50)
coef(lm(totalfriends ~ age, data = q2a))
#Answer:
#As you can see in the graph, there are a lot of members within the age range of 15 - 30
#who have around 50 friends, howevre there are few members between that age range
#how have more than 100 friends
#Does age affect whether users move away from their hometown to live
#another city?
#Answer:
#I created a new column in the dataset to represent the absolute value of the distance
#each user has travelled from their hometown.
q2a$absdistance <- abs(q2a$living - q2a$hometown)
qplot(factor(age), data=q2a, geom="bar", fill=factor(absdistance))
#A majorty of the users are represented by those who are in their mid-teens to about 30
#and most of which haven't moved away from home, but the second largest group
#of those users have moved 1 region away from their hometown.
#Most of the users outside of this age range are living in the region of their hometown.
#And interestingly, everyone has either moved only by 1 region, or 5 regions, nothing in between.
#Characterize the relation between age and relationship status.
ggplot(q2a, aes(x=factor(age),fill=relation_status)) + geom_bar() + coord_polar(theta="x")
#I've created a circular graph with ages of the users, and filled in the area on each age line
#with the count of the relationship status, in blocks of 200.
# Draw scatter plots between the number of total actions, visits, posts and
pairs(q2a[,c(8,11,12,13)])
#How does the sign up date influence the number of new friends they made?
ggplot(q2a, aes(x=sign_up,y=total_new_friends))+geom_line(aes(color=gender)) + scale_x_date(breaks="6 months",labels=date_format("%b/%Y"))
#Answer:
#This graph depicts the number of total new friends on the y-axis,
#paired with the sign_up date on the x-axis which is in 6 month increments on major lines, and 3 months on minor lines.
#Members who signed up between ~August 2009 and ~June 2013 all added about 12 friends in the past week.
#However members who joined between ~July 2013 and October 2013 added between 12 and 112 friends,
#with the higher number of adds closer to October 2013.
#Is there any relation between age and users' actions?
ggplot(q2a, aes(x=age,y=total_action)) + geom_hex(bins=30)
#A majority of the the high action users are between 15 and 30.
#However there are many more users between that age who have very few actions
ggplot(q2a, aes(x=age,y=total_action)) + geom_hex(bins=50)
ggplot(q2a, aes(x=age,y=total_action)) + geom_hex(bins=20)
ggplot(q2a, aes(x=age,y=total_action)) + geom_hex(bins=100)
ggplot(q2a, aes(x=age,y=total_action)) + geom_hex(bins=25)
#A majority of the the high action users are between 15 and 30.
#However there are many more users between that age who have very few actions
#Do earlier users have more friends?
ggplot(q2a, aes(x=sign_up,y=totalfriends))+geom_line(aes(color=gender)) + scale_x_date(breaks="6 months",labels=date_format("%b/%Y"))
#Answer:
#I'm not sure if I ran this graph correctly, because the line from beginning of time
ggplot(q2a, aes(x=totalfriends, fill=relation_status)) + geom_density(alpha=.3)
ggplot(q2a, aes(x=age,y=totalfriends)) + geom_hex(bins=50)
ggplot(q2a, aes(x=age,y=totalfriends)) + geom_hex(bins=60)
ggplot(q2a, aes(x=age,y=totalfriends)) + geom_hex(bins=30)
ggplot(q2a, aes(x=age,y=totalfriends)) + geom_hex(bins=50)
ggplot(q2a, aes(x=age,y=totalfriends)) + geom_hex(bins=45)
ggplot(q2a, aes(x=age,y=totalfriends)) + geom_point()
ggplot(q2a, aes(x=age,y=totalfriends)) + geom_hex(bins=45)
ggplot(q2a, aes(x=age,y=totalfriends)) + geom_point() #this is just the points
ggplot(q2a, aes(x=age,y=totalfriends)) + geom_hex(bins=45) #This shows the ponts along with a count-index
coef(lm(totalfriends ~ age, data = q2a))
#Answer:
#As you can see in the graph, there are a lot of members within the age range of 15 - 30
#who have around 50 friends, howevre there are few members between that age range
#how have more than 100 friends
q2a$absdistance <- abs(q2a$living - q2a$hometown)
qplot(factor(age), data=q2a, geom="bar", fill=factor(absdistance))
ggplot(q2a, aes(x=factor(age),fill=relation_status)) + geom_bar() + coord_polar(theta="x")
ggplot(q2a, aes(x=sign_up,y=total_new_friends))+geom_line(aes(color=gender)) + scale_x_date(breaks="6 months",labels=date_format("%b/%Y"))
ggplot(q2a, aes(x=age,y=total_action)) + geom_hex(bins=25)
ggplot(q2a, aes(x=age,y=total_action)) + geom_point()
ggplot(q2a, aes(x=age,y=total_action)) + geom_hex(bins=25)
ggplot(q2a, aes(x=age,y=total_action)) + geom_hex(bins=40)
ggplot(q2a, aes(x=age,y=total_action)) + geom_point()
ggplot(q2a, aes(x=age,y=total_action)) + geom_hex(bins=40)
ggplot(q2a, aes(x=sign_up,y=totalfriends))+geom_line(aes(color=gender)) + scale_x_date(breaks="6 months",labels=date_format("%b/%Y"))
setwd("/Users/michaelpiccirilli/Desktop/Fall_2013/W4242/Assignment_2")
code2b <- read.csv(file="Assignment2_2b.csv",header=TRUE,sep=",")
setwd("/Users/michaelpiccirilli/Desktop/Fall_2013/W4242/Assignment_2/social_network_dataset") #load tge original profile data
profile <- read.csv(file="profile.csv",header=TRUE,sep=",")
require(ggplot2)
require(Metrics)
require(e1071)
require(DAAG)
df <- code2b
#Add in the categorical data from the original dataset
df$relation_status_num <- profile$relation_status
df$gender_num <- profile$gender
###########################################
#2.d.1: Build a model to predict the total number of action
colnames(df)
df1 <- df[,c(8,11)] #total_action ~ total_visits
fit1 <- lm(total_action ~ total_visits, data=df1)
summary(fit1)
cv.lm(df = df1, form.lm = formula(total_action ~ total_visits))
df2 <- df[,c(8,14)] #total_action ~ total_new_friends
df2 <- df[,c(8,14)]
fit2 <- lm(total_action ~ total_new_friends, data=df2)
summary(fit2)
summary(fit2) #the r-sqr has improved dramatically
cv.lm(df = df, form.lm = formula(total_action ~ total_new_friends))
df3 <- df[,c(8,14, 13)]
fit3 <- lm(total_action ~ total_new_friends + total_time_spend, data=df3)
summary(fit3)
fit3 <- lm(total_action ~ total_new_friends + total_time_spend, data=df3)
summary(fit3)
summary(fit2) #the r-sqr has improved dramatically
summary(fit3) #we see a continued improvement of
cv.lm(df = df3, form.lm = formula(total_action ~ total_new_friends + total_time_spend))
df4 <- df[,c(8,14,13,11)]
fit4 <- lm(total_action ~ total_new_friends + total_time_spend + total_visits, data=df4)
summary(fit4)
summary(fit3) #we see a continued improvement of r-sqr
summary(fit4)
summary(fit2) #the r-sqr has improved dramatically
summary(fit3) #we see a continued improvement of r-sqr
cv.lm(df = df4, form.lm = formula(total_action ~ total_time_spend + total_new_friends + total_visits))
View(df)
df5 <- df[,c(8,14,13,11)]
df5$combined <- (df$total_time_spend * df$total_visits)/2
cv.lm(df = df5, form.lm = formula(total_action ~ combined + total_new_friends))
fit5 <- lm(total_action ~ combined + total_new_friends, data=df5)
summary(fit5)
summary(fit4) #there is an improvement, but it only improves the r-sqr by about .04
dfkc <- df5
dfkc$total_action <- NULL
dfkc$total_time_spend <- NULL
dfkc$total_visits <- NULL
#Run k-means and plot the data for each test
kc2 <- kmeans(dfkc,2)
plot(dfkc[c("total_new_friends","combined")], col=kc2$cluster)
kc2
points(kc2$centers[,c("total_new_friends", "combined")],col=1:2, pch=2, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc2$cluster)
points(kc2$centers[,c("total_new_friends", "combined")],col=1:2, pch=6, cex=3)
kc2
kc3 <- kmeans(dfkc,3)
plot(dfkc[c("total_new_friends","combined")], col=kc3$cluster)
points(kc3$centers[,c("total_new_friends", "combined")],col=1:2, pch=6, cex=3)
points(kc3$centers[,c("total_new_friends", "combined")],col=1:2, pch=6, cex=2)
plot(dfkc[c("total_new_friends","combined")], col=kc3$cluster)
points(kc3$centers[,c("total_new_friends", "combined")],col=1:2, pch=4, cex=5)
plot(dfkc[c("total_new_friends","combined")], col=kc3$cluster)
points(kc3$centers[,c("total_new_friends", "combined")],col=1:2, pch=4, cex=3)
kc3
kc4 <- kmeans(dfkc,4)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:2, pch=8, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:2, pch=8, cex=3)
kc4 <- kmeans(dfkc,4)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:2, pch=8, cex=3)
kc5 <- kmeans(dfkc,5)
kc4
head(kc4)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:4, pch=8, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:4, pch=1, cex=3)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:4, pch=2, cex=3)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:4, pch=7, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:4, pch=7, cex=3)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:4, pch=9, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:4, pch=9, cex=3)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:4, pch=10, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
points(kc4$centers[,c("total_new_friends", "combined")],col=1:4, pch=10, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
points(kc4$centers[,c("total_new_friends", "combined")],col=5:9, pch=10, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc2$cluster)
points(kc2$centers[,c("total_new_friends", "combined")],col=3:4, pch=6, cex=3)
points(kc2$centers[,c("total_new_friends", "combined")],col=3:4, pch=8, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc2$cluster)
points(kc2$centers[,c("total_new_friends", "combined")],col=3:4, pch=8, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc3$cluster)
points(kc3$centers[,c("total_new_friends", "combined")],col=3,5,7, pch=4, cex=3)
points(kc3$centers[,c("total_new_friends", "combined")],col=5:7, pch=4, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc3$cluster)
points(kc3$centers[,c("total_new_friends", "combined")],col=7:9, pch=4, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc3$cluster)
points(kc3$centers[,c("total_new_friends", "combined")],col=4:6, pch=4, cex=3)
points(kc3$centers[,c("total_new_friends", "combined")],col=10:12, pch=4, cex=3)
points(kc3$centers[,c("total_new_friends", "combined")],col=10:12, pch=4, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc3$cluster)
points(kc3$centers[,c("total_new_friends", "combined")],col=10:12, pch=4, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc3$cluster)
points(kc3$centers[,c("total_new_friends", "combined")],col=1:3, pch=4, cex=3)
points(kc3$centers[,c("total_new_friends", "combined")],col=4:6, pch=4, cex=3)
points(kc3$centers[,c("total_new_friends", "combined")],col=1:3, pch=4, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
points(kc4$centers[,c("total_new_friends", "combined")],col=5:9, pch=10, cex=3)
plot(dfkc[c("total_new_friends","combined")], col=kc4$cluster)
points(kc4$centers[,c("total_new_friends", "combined")],col=5:8, pch=10, cex=3)
kc5 <- kmeans(dfkc,5)
plot(dfkc[c("total_new_friends","combined")], col=kc5$cluster)
points(kc5$centers[,c("total_new_friends", "combined")],col=7:11, pch=10, cex=4)
points(kc5$centers[,c("total_new_friends", "combined")],col=7:11, pch=7, cex=4)
plot(dfkc[c("total_new_friends","combined")], col=kc5$cluster)
points(kc5$centers[,c("total_new_friends", "combined")],col=7:11, pch=7, cex=4)
points(kc5$centers[,c("total_new_friends", "combined")],col=7:11, pch=8, cex=6)
plot(dfkc[c("total_new_friends","combined")], col=kc5$cluster)
points(kc5$centers[,c("total_new_friends", "combined")],col=7:11, pch=8, cex=6)
plot(dfkc[c("total_new_friends","combined")], col=kc5$cluster)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:5, pch=8, cex=6)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:5, pch=3, cex=6)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:5, pch=2, cex=6)
plot(dfkc[c("total_new_friends","combined")], col=kc5$cluster)
points(kc5$centers[,c("total_new_friends", "combined")],col=6:10, pch=2, cex=6)
plot(dfkc[c("total_new_friends","combined")], col=kc5$cluster)
points(kc5$centers[,c("total_new_friends", "combined")],col=1:5, pch=2, cex=6)
