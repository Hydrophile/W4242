rm(connection)
rm(imfdata)
egy <- as.data.frame(egy)
View(egy)
egy<- subset(gdelt.subset, Actor2CountryCode=="EGY")
View(egy)
colnames(gdelt.subset)
View(egy)
gdelt2010 <- GetGDELT(start.date="2010-01-01", end.date="2010-12-31")
require(plyr)
require(rjson)
require(RTextTools)
require(useful)
require(randomForest)
require(caret)
train.kaggle <- read.table("train.tsv",header=T,sep="\t", stringsAsFactors = FALSE)
test.kaggle <- read.table("test.tsv",header=T,sep="\t",stringsAsFactors=FALSE)
setwd("/Users/michaelpiccirilli/Desktop/Fall_2013/W4242/Kaggle_Competition")
train.kaggle <- read.table("train.tsv",header=T,sep="\t", stringsAsFactors = FALSE)
test.kaggle <- read.table("test.tsv",header=T,sep="\t",stringsAsFactors=FALSE)
jsonDataTrain <- sapply(train.kaggle$boilerplate, fromJSON)
train.kaggle$title <- sapply(1:nrow(train.kaggle), function(i, jsonDataTrain) unlist(jsonDataTrain[[i]])["title"], jsonDataTrain)
train.kaggle$body <- sapply(1:nrow(train.kaggle), function(i, jsonDataTrain) unlist(jsonDataTrain[[i]])["body"], jsonDataTrain)
train.kaggle$bp_url <- sapply(1:nrow(train.kaggle), function(i, jsonDataTrain) unlist(jsonDataTrain[[i]])["url"], jsonDataTrain)
jsonDataTest <- sapply(test.kaggle$boilerplate, fromJSON)
test.kaggle$title <- sapply(1:nrow(test.kaggle), function(i, jsonDataTest) unlist(jsonDataTest[[i]])["title"], jsonDataTest)
test.kaggle$body <- sapply(1:nrow(test.kaggle), function(i, jsonDataTest) unlist(jsonDataTest[[i]])["body"], jsonDataTest)
test.kaggle$bp_url <- sapply(1:nrow(test.kaggle), function(i, jsonDataTest) unlist(jsonDataTest[[i]])["url"], jsonDataTest)
http.train <- grep("http",train.kaggle$url)
webinfo.train <- gsub("[[:alpha:]]{4}[[:punct:]]{3}[[:alpha:]]{3}[[:punct:]]{1}([0-9,A-Z,a-z]+)[[:punct:]]{1}.+",replacement="\\1",train.kaggle$url[http.train])
webinfo.train <- as.data.frame(webinfo.train)
webinfo.train <- gsub("[[:alpha:]]{4}[[:punct:]]{3}([0-9,A-Z,a-z]+)[[:punct:]]{1}.+",replacement="\\1",webinfo.train$webinfo[http.train])
webinfo.train <- as.data.frame(webinfo.train)
train.kaggle$website <- webinfo.train$webinfo.train
train.kaggle$website <- as.character(train.kaggle$website)
http.test <- grep("http",test.kaggle$url)
webinfo.test <- gsub("[[:alpha:]]{4}[[:punct:]]{3}[[:alpha:]]{3}[[:punct:]]{1}([0-9,A-Z,a-z]+)[[:punct:]]{1}.+",replacement="\\1",test.kaggle$url[http.test])
webinfo.test <- as.data.frame(webinfo.test)
webinfo.test <- gsub("[[:alpha:]]{4}[[:punct:]]{3}([0-9,A-Z,a-z]+)[[:punct:]]{1}.+",replacement="\\1",webinfo.test$webinfo.test[http.test])
webinfo.test <- as.data.frame(webinfo.test)
test.kaggle$website <- webinfo.test$webinfo.test
test.kaggle$website <- as.character(test.kaggle$website)
rm(webinfo.test, webinfo.train, http.test, http.train, jsonDataTest, jsonDataTest)
rm(webinfo.test, webinfo.train, http.test, http.train, jsonDataTest, jsonDataTrain)
count.web <- data.frame(count(sample,var="website"))
colnames(count.web)[1] <- "website"
count.web <- data.frame(count(train.kaggle,var="website"))
colnames(count.web)[1] <- "website"
m.web <- merge(train.kaggle,count.web,by="website")
View(m.web)
colnames(m.web)
setwd("/Users/michaelpiccirilli/Desktop/Fall_2013/W4242/Assignment_3")
kaggle <- read.table(file="kaggle_data.csv",header=T,sep=",")
df <- kaggle
rm(kaggle)
test <- grep("http",df$url)
testinfo <- gsub("[[:alpha:]]{4}[[:punct:]]{3}[[:alpha:]]{3}[[:punct:]]{1}([0-9,A-Z,a-z]+)[[:punct:]]{1}.+",replacement="\\1",df$url[test])
testinfo <- as.data.frame(testinfo)
testinfo <- gsub("[[:alpha:]]{4}[[:punct:]]{3}([0-9,A-Z,a-z]+)[[:punct:]]{1}.+",replacement="\\1",testinfo$testinfo[test])
testinfo <- as.data.frame(testinfo)
df$website <- testinfo$testinfo
test_table <- table(testinfo$testinfo)
test_table <- as.data.frame(test_table)
View(test_table)
label_agg <- aggregate(label~website,df,mean)
View(label_agg)
test_table$label_mean <- label_agg$label
View(test_table)
text <- c("transporting food by cars will cause global warming. so we should go local.",
"we should try to convince our parents to stop using cars because it will cause global warming.",
"some food, such as mongo, requires a warm weather to grow. so they have to be transported to canada.",
"a typical electronic circuit can be built with a battery, a bulb, and a switch.",
"electricity flows from batteries to the bulb, just like water flows through a tube.",
"batteries have chemical energe in it. then electrons flow through a bulb to light it up.",
"birds can fly because they have feather and they are light.", "why some birds like pigeon can fly while some others like chicken cannot?",
"feather is important for birds' fly. if feather on a bird's wings is removed, this bird cannot fly.")
view <- factor(rep(c("view 1", "view 2", "view 3"), each = 3))
df <- data.frame(text, view, stringsAsFactors = FALSE)
corpus <- Corpus(VectorSource(df$text))
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, function(x) removeWords(x, stopwords("english")))
corpus <- tm_map(corpus, stemDocument, language = "english")
corpus <- Corpus(VectorSource(df$text))
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, function(x) removeWords(x, stopwords("english")))
td.mat <- as.matrix(TermDocumentMatrix(corpus))
View(td.mat)
dist.mat <- dist(t(as.matrix(td.mat)))
dist.mat  # check distance matrix
fit <- cmdscale(dist.mat, eig = TRUE, k = 2)
points <- data.frame(x = fit$points[, 1], y = fit$points[, 2])
ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y,
color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
View(points)
fit
View(df)
train.title.kaggle.matrix <- create_matrix(train.kaggle$title, language = "english",
removeNumbers=TRUE, removeStopwords = TRUE,
removePunctuation=TRUE, minWordLength=2,
removeSparseTerms=.995, toLower=TRUE)
train.title.kaggle.matrix <- as.matrix(train.title.kaggle.matrix)
View(train.title.kaggle.matrix)
dist.train.mat <- dist(t(as.matrix(train.title.kaggle.matrix)))
head(dist.train.mat)  # check distance matrix
topright(dist.train.mat)  # check distance matrix
dist.train.mat  # check distance matrix
fit.train <- cmdscale(dist.train.mat, eig = TRUE, k = 2)
points.train <- data.frame(x = fit.train$points[, 1], y = fit.train$points[, 2])
View(points.train)
View(points.train)
ggplot(points.train, aes(x = x, y = y)) + geom_point(data = points.train, aes(x = x, y = y,
color = train.kaggle$label)) + geom_text(data = points.train, aes(x = x, y = y - 0.2, label = row.names(train.kaggle)))
ggplot(points.train, aes(x = x, y = y)) + geom_point(data = points.train, aes(x = x, y = y, color = train.kaggle$label))
ggplot(points.train, aes(x = x, y = y)) + geom_point()
ggplot(points.train, aes(x = x, y = y)) + geom_point(data = points.train, aes(x = x, y = y))
ggplot(points, aes(x = x, y = y)) + geom_point(data = points, aes(x = x, y = y,
color = df$view)) + geom_text(data = points, aes(x = x, y = y - 0.2, label = row.names(df)))
points.train <- data.frame(x = fit.train$points[, 1], y = fit.train$points[, 2])
ggplot(points.train, aes(x = x, y = y)) + geom_point(data = points.train, aes(x = x, y = y, color = train.kaggle$label))
+ geom_text(data = points.train, aes(x = x, y = y, label = row.names(train.kaggle)))
View(points.train)
points.train <- data.frame(x = fit.train$points[, 1], y = fit.train$points[, 2])
ggplot(points.train, aes(x = x, y = y)) + geom_point(data = points.train, aes(x = x, y = y, color = train.kaggle$label))
+ geom_text(data = points.train, aes(x = x, y = y, label = row.names(points.train)))
ggplot(points.train, aes(x = x, y = y)) + geom_point(data = points.train, aes(x = x, y = y, color = train.kaggle$label))
View(df)
ggplot(points.train, aes(x = x, y = y)) + geom_point(data = points.train, aes(x = x, y = y, color = train.kaggle$alchemy_category))
View(points)
View(points.train)
View(points)
ggplot(points.train, aes(x = x, y = y)) + geom_point(aes(x = x, y = y, color = train.kaggle$label))
ggplot(points.train, aes(x = x, y = y)) + geom_point(aes(x = x, y = y))
ggplot(points.train, aes(x = x, y = y)) + geom_point(aes(x = x, y = y, colour = factor(train.kaggle$label)))
ggplot(points.train, aes(x = x, y = y)) + geom_point(aes(colour = factor(train.kaggle$label)))
View(points.train)
ggplot(points.train, aes(x = x, y = y)) + geom_point(aes(colour = train.kaggle$label)))
ggplot(points.train, aes(x = x, y = y)) + geom_point(aes(colour = train.kaggle$label)))
ggplot(points.train, aes(x = x, y = y)) + geom_point(aes(colour = train.kaggle$label))
ggplot(points.train, aes(x = x, y = y)) + geom_point()
+ geom_text(data = points.train, aes(x = x, y = y, label = row.names(points.train)))
ggplot(points.train, aes(x = x, y = y)) + geom_point()
+ geom_text(data = points.train, aes(x = x, y = y, label = row.names(points.train)))
+ geom_text(aes(label = row.names(points.train)))
ggplot(points.train, aes(x = x, y = y)) + geom_point()
+ geom_text(aes(label = row.names(points.train)))
ggplot(points.train, aes(x = x, y = y)) + geom_point()
+ geom_text()
ggplot(points.train, aes(x = x, y = y, label = rownames(point.train))) + geom_point()
ggplot(points.train, aes(x = x, y = y, label = row.names(point.train))) + geom_point()
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()
+ geom_text()
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()+ geom_text()
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()+ geom_text(aes(size=x,y))
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()+ geom_text(aes(size=x))
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()+ geom_text(aes(size=(x,y))
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()+ geom_text(aes(size=x,y))
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()+ geom_text(aes(size=y))
train.title.kaggle.matrix <- create_matrix(train.kaggle$title, language = "english",
removeNumbers=TRUE, removeStopwords = TRUE,
removePunctuation=TRUE, minWordLength=2,
removeSparseTerms=.998, toLower=TRUE)
train.title.kaggle.matrix <- as.matrix(train.title.kaggle.matrix)
dist.train.mat <- dist(t(as.matrix(train.title.kaggle.matrix)))
dist.train.mat  # check distance matrix
fit.train <- cmdscale(dist.train.mat, eig = TRUE, k = 2)
points.train <- data.frame(x = fit.train$points[, 1], y = fit.train$points[, 2])
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()+ geom_text(aes(size=y))
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()+ geom_text()
View(points.train)
train.title.kaggle.matrix <- create_matrix(train.kaggle$title, language = "english",
removeNumbers=TRUE, removeStopwords = TRUE,
removePunctuation=TRUE, minWordLength=2,
removeSparseTerms=.990, toLower=TRUE)
train.title.kaggle.matrix <- as.matrix(train.title.kaggle.matrix)
dist.train.mat <- dist(t(as.matrix(train.title.kaggle.matrix)))
dist.train.mat  # check distance matrix
fit.train <- cmdscale(dist.train.mat, eig = TRUE, k = 2)
points.train <- data.frame(x = fit.train$points[, 1], y = fit.train$points[, 2])
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()+ geom_text()
ggplot(points.train, aes(x = x, y = y, color=train.kaggle$label))) + geom_point()+ geom_text()
ggplot(points.train, aes(x = x, y = y, color=train.kaggle$label))) + geom_point()
ggplot(points.train, aes(x = x, y = y, color=train.kaggle$label)) + geom_point()
train.title.kaggle.matrix <- create_matrix(train.kaggle$title, language = "english",
removeNumbers=TRUE, removeStopwords = TRUE,
removePunctuation=TRUE, minWordLength=2,
removeSparseTerms=.985, toLower=TRUE)
train.title.kaggle.matrix <- as.matrix(train.title.kaggle.matrix)
dist.train.mat <- dist(t(as.matrix(train.title.kaggle.matrix)))
dist.train.mat  # check distance matrix
fit.train <- cmdscale(dist.train.mat, eig = TRUE, k = 2)
points.train <- data.frame(x = fit.train$points[, 1], y = fit.train$points[, 2])
ggplot(points.train, aes(x = x, y = y)) + geom_point()
ggplot(points.train, aes(x = x, y = y, label = rownames(points.train))) + geom_point()
View(points.train)
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point()
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text()
train.title.kaggle.matrix <- create_matrix(train.kaggle$title, language = "english",
removeNumbers=TRUE, removeStopwords = TRUE,
removePunctuation=TRUE, minWordLength=2,
removeSparseTerms=.982, toLower=TRUE)
train.title.kaggle.matrix <- as.matrix(train.title.kaggle.matrix)
dist.train.mat <- dist(t(as.matrix(train.title.kaggle.matrix)))
fit.train <- cmdscale(dist.train.mat, eig = TRUE, k = 2)
points.train <- data.frame(x = fit.train$points[, 1], y = fit.train$points[, 2])
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text()
train.title.kaggle.matrix <- create_matrix(train.kaggle$title, language = "english",
removeNumbers=TRUE, removeStopwords = TRUE,
removePunctuation=TRUE, minWordLength=2,
removeSparseTerms=.98, toLower=TRUE)
train.title.kaggle.matrix <- as.matrix(train.title.kaggle.matrix)
dist.train.mat <- dist(t(as.matrix(train.title.kaggle.matrix)))
fit.train <- cmdscale(dist.train.mat, eig = TRUE, k = 2)
points.train <- data.frame(x = fit.train$points[, 1], y = fit.train$points[, 2])
fit.train <- cmdscale(dist.train.mat, eig = TRUE, k = 2)
points.train <- data.frame(x = fit.train$points[, 1], y = fit.train$points[, 2])
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text()
train.title.kaggle.matrix <- create_matrix(train.kaggle$title, language = "english",
removeNumbers=TRUE, removeStopwords = TRUE,
removePunctuation=TRUE, minWordLength=2,
removeSparseTerms=.975, toLower=TRUE)
train.title.kaggle.matrix <- as.matrix(train.title.kaggle.matrix)
dist.train.mat <- dist(t(as.matrix(train.title.kaggle.matrix)))
fit.train <- cmdscale(dist.train.mat, eig = TRUE, k = 2)
points.train <- data.frame(x = fit.train$points[, 1], y = fit.train$points[, 2])
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text()
train.title.kaggle.matrix <- create_matrix(train.kaggle$title, language = "english",
removeNumbers=TRUE, removeStopwords = TRUE,
removePunctuation=TRUE, minWordLength=2,
removeSparseTerms=.977, toLower=TRUE)
train.title.kaggle.matrix <- as.matrix(train.title.kaggle.matrix)
dist.train.mat <- dist(t(as.matrix(train.title.kaggle.matrix)))
fit.train <- cmdscale(dist.train.mat, eig = TRUE, k = 2)
points.train <- data.frame(x = fit.train$points[, 1], y = fit.train$points[, 2])
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text()
View(points.train)
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point(data=points.train,aes(x = x, y = y, color = train.kaggle$label) ) + geom_text()
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text()
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text(hjust=0, vjust=0)
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text(hjust=0, vjust=1)
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text(hjust=0, vjust=-1)
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text(hjust=0, vjust=-.5)
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text(hjust=3, vjust=-.5)
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text(hjust=1, vjust=-.5)
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text(hjust=, vjust=-.5)
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text(hjust=0, vjust=-.5)
td.mat.lsa <- lw_bintf(train.title.kaggle.matrix) * gw_idf(train.title.kaggle.matrix)  # weighting
require(lsa)
lsaSpace <- lsa(td.mat.lsa)  # create LSA space
td.mat.lsa <- lw_bintf(train.title.kaggle.matrix) * gw_idf(train.title.kaggle.matrix)  # weighting
lsaSpace <- lsa(td.mat.lsa)  # create LSA space
which(!is.finite(as.matrix(train.title.kaggle.matrix)))
which(!is.finite(which(!is.finite(XTR))))
which(!is.finite(train.title.kaggle.matrix))
View(td.mat.lsa)
td.mat.lsa <- lw_bintf(train.title.kaggle.matrix) * gw_idf(train.title.kaggle.matrix)  # weighting
View(td.mat.lsa)
rm(td.mat.lsa)
td.mat.lsa <- lw_bintf(train.title.kaggle.matrix) * gw_idf(train.title.kaggle.matrix)  # weighting
View(td.mat.lsa)
lsaSpace <- lsa(td.mat.lsa)  # create LSA space
library(scatterplot3d)
fit.3d <- cmdscale(dist.train.mat, eig = TRUE, k = 3)
scatterplot3d(fit.3d$points[, 1], fit.3d$points[, 2], fit.3d$points[, 3],
main = "3D Euclidean Distance Between 10 Words", xlab = "x", ylab = "y",
zlab = "z", type = "h")
library(scatterplot3d)
install.packages("scatterplot3d)")
install.packages("scatterplot3d")
scatterplot3d(fit.3d$points[, 1], fit.3d$points[, 2], fit.3d$points[, 3],
main = "3D Euclidean Distance Between 10 Words", xlab = "x", ylab = "y",
zlab = "z", type = "h")
require(rgl)
plot3d(fit.3d$points[, 1], fit.3d$points[, 2], fit.3d$points[, 3],
main = "3D Euclidean Distance Between 10 Words", xlab = "x", ylab = "y",
zlab = "z", type = "h")
plot3d(fit.3d$points[, 1], fit.3d$points[, 2], fit.3d$points[, 3],
main = "3D Euclidean Distance Between 10 Words")
plot3d(fit.3d$points[, 1], fit.3d$points[, 2], fit.3d$points[, 3],
main = "3D Euclidean Distance Between 10 Words",
xlab = "x", ylab = "y", zlab = "z")
plot3d(fit.3d$points[, 1], fit.3d$points[, 2], fit.3d$points[, 3],
main = "3D Euclidean Distance Between 10 Words",
xlab = "x", ylab = "y", zlab = "z", col=rainbow())
plot3d(fit.3d$points[, 1], fit.3d$points[, 2], fit.3d$points[, 3],
main = "3D Euclidean Distance Between 10 Words",
xlab = "x", ylab = "y", zlab = "z", col=rainbow(1:10))
decorate3d(fit.3d$points[, 1], fit.3d$points[, 2], fit.3d$points[, 3],
main = "3D Euclidean Distance Between 10 Words",
xlab = "x", ylab = "y", zlab = "z", col=rainbow(1:10), label=row.names(points.train))
plot3d(fit.3d$points[, 1], fit.3d$points[, 2], fit.3d$points[, 3],
main = "3D Euclidean Distance Between 10 Words",
xlab = "x", ylab = "y", zlab = "z", col=rainbow(1:10), lable= row.names(points.train))
plot3d(fit.3d$points[, 1], fit.3d$points[, 2], fit.3d$points[, 3],
main = "3D Euclidean Distance Between 10 Words",
xlab = "x", ylab = "y", zlab = "z", col=rainbow(1:10), label= row.names(points.train))
plot3d(fit.3d$points[, 1], fit.3d$points[, 2], fit.3d$points[, 3],
main = "3D Euclidean Distance Between Top 10 Words in Title",
xlab = "x", ylab = "y", zlab = "z", col=rainbow(1:10), label= row.names(points.train))
ggplot(points.train, aes(x = x, y = y, label = row.names(points.train))) + geom_point() + geom_text(hjust=0, vjust=-.5)
